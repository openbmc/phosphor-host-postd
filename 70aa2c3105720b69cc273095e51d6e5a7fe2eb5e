{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8756e572_7b88073a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "probably the last set of comments. lets make all of the changes for `ENABLE_IPMI_SNOOP` only and will not affect existing systems.",
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9be26cfc_cc36df9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8756e572_7b88073a",
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d80d8d0a_3a13e2d3",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 218,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "should only be used in ENABLE_IPMI_SNOOP",
      "range": {
        "startLine": 218,
        "startChar": 4,
        "endLine": 218,
        "endChar": 34
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "028855ee_27045332",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 218,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d80d8d0a_3a13e2d3",
      "range": {
        "startLine": 218,
        "startChar": 4,
        "endLine": 218,
        "endChar": 34
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32560483_f5f8337e",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 230,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "only used in ENABLE_IPMI_SNOOP",
      "range": {
        "startLine": 230,
        "startChar": 7,
        "endLine": 230,
        "endChar": 47
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "072aa24b_86ba2b10",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 230,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32560483_f5f8337e",
      "range": {
        "startLine": 230,
        "startChar": 7,
        "endLine": 230,
        "endChar": 47
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c2998a_55bfb4cf",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 257,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "only used in ENABLE_IPMI_SNOOP",
      "range": {
        "startLine": 246,
        "startChar": 12,
        "endLine": 257,
        "endChar": 13
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c5baab5_9943625f",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 257,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05c2998a_55bfb4cf",
      "range": {
        "startLine": 246,
        "startChar": 12,
        "endLine": 257,
        "endChar": 13
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f5d5e32_34dd3010",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 345,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "flip logic and just do\n\n#ifdef ENABLE_IPMI_SNOOP\n    std::cout \u003c\u003c \"Verbose \u003d \" \u003c\u003c verbose \u003c\u003c std::endl;\n    return postCodeIpmiHandler(ipmiSnoopObject, snoopDbus, bus, host);\n#endif",
      "range": {
        "startLine": 342,
        "startChar": 0,
        "endLine": 345,
        "endChar": 6
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e572a44_8338aa15",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 345,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f5d5e32_34dd3010",
      "range": {
        "startLine": 342,
        "startChar": 0,
        "endLine": 345,
        "endChar": 6
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aae2831_e27a1e69",
        "filename": "main.cpp",
        "patchSetId": 20
      },
      "lineNbr": 345,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-28T17:22:49Z",
      "side": 1,
      "message": "I was thinking to move this before the other block of code\n\nand remove the compile flag for `#ifndef ENABLE_IPMI_SNOOP` so that we always build it but that\u0027s probably not a good idea.\n\nLet\u0027s revert this and just make sure that return the error code with\n\n```\nreturn postCodeIpmiHandler(ipmiSnoopObject, snoopDbus, bus, host);\n```",
      "parentUuid": "9e572a44_8338aa15",
      "range": {
        "startLine": 342,
        "startChar": 0,
        "endLine": 345,
        "endChar": 6
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9f0ddc4_1024a751",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 26,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "this forces it to be required and it used to be optional.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 57
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cab34a9_c3564906",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 26,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Ack. Will update this to without optional.",
      "parentUuid": "e9f0ddc4_1024a751",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 57
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab8d056d_0e495da1",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 32,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T23:10:57Z",
      "side": 1,
      "message": "prefer not get_options(\u0027snoop\u0027).disabled()\n\nthis will include enabled and auto",
      "range": {
        "startLine": 32,
        "startChar": 3,
        "endLine": 32,
        "endChar": 31
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7959c150_ab19bad0",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 32,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab8d056d_0e495da1",
      "range": {
        "startLine": 32,
        "startChar": 3,
        "endLine": 32,
        "endChar": 31
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611c73f4_3fe6cee2",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 40,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-27T18:03:22Z",
      "side": 1,
      "message": "can we just append host-instances to SNOOPD_ARGS and make it optional. So that it will work like before without it.\n\nand make `snoop-device` dependent on `snoop`.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "791b1687_ca024e5b",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 40,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-04-28T16:35:22Z",
      "side": 1,
      "message": "Added host-instances to SNOOPD_ARGS with optional. \n\nsnoop, snoop-device are different meson options. snoop is used to enable IPMISNOOP and snoop-device refers to linux module snoop-device.",
      "parentUuid": "611c73f4_3fe6cee2",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb528502_1ab0eeae",
        "filename": "meson.build",
        "patchSetId": 20
      },
      "lineNbr": 40,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-04-28T17:22:49Z",
      "side": 1,
      "message": "I was thinking of \n\n```\nsnoopd_args \u003d \u0027-b \u0027 + get_option(\u0027post-code-bytes\u0027).to_string()\nif not get_option(\u0027snoop\u0027).disabled()\n  add_project_arguments(\u0027-DENABLE_IPMI_SNOOP\u0027,language:\u0027cpp\u0027)\n  snoopd_args +\u003d \u0027-h \u0027 + get_option(\u0027host-instances\u0027)\nendif\n\nif get_option(\u0027snoop-device\u0027) !\u003d \u0027\u0027\n  snoopd_args +\u003d \u0027 -d /dev/\u0027 + get_option(\u0027snoop-device\u0027)\nendif\nconf_data.set(\u0027SNOOPD_ARGS\u0027, snoopd_args)\n```\n\nand in the service file just have\n\n```\nExecStart\u003d@bindir@/snoopd @SNOOPD_ARGS@\n```\nlike before.\n\nThis allow us to support exiting systems while supporting the new change.",
      "parentUuid": "791b1687_ca024e5b",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "70aa2c3105720b69cc273095e51d6e5a7fe2eb5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}